version: '3'

volumes:
  cctool_prod_db_data: {}
  cctool_prod_db_data_backups: {}
  cctool_local_frontend: {}
  cctool_prod_caddy: {}

services:

  # --- Backend ---

  django: &django
    build:
      context: "$CCTOOL"
      dockerfile: ./docker/compose/production/django/Dockerfile
    image: cctool_prod_django
    container_name: cctool_prod_django
    depends_on:
      - postgres
      - redis
      - angularjs
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /bin/bash -c "/Developer/cctool/scripts/logo && /Developer/cctool/scripts/start"

  postgres:
    build:
      context: "$CCTOOL"
      dockerfile: ./docker/compose/production/postgres/Dockerfile
    image: cctool_prod_postgres
    container_name: cctool_prod_postgres
    volumes:
      - cctool_prod_db_data:/var/lib/postgresql/data
      - cctool_prod_db_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  caddy:
    build:
      context: "$CCTOOL"
      dockerfile: ./docker/compose/production/caddy/Dockerfile
    image: cctool_prod_caddy
    container_name: cctool_prod_caddy
    depends_on:
      - django
    volumes:
      - cctool_prod_caddy:/root/.caddy
    env_file:
      - ./.envs/.production/.caddy
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:3.2
    container_name: cctool_prod_redis

  celeryworker:
    <<: *django
    image: cctool_prod_celeryworker
    container_name: cctool_prod_celeryworker
    depends_on:
      - redis
      - postgres
    command: /bin/bash -c "/Developer/cctool/scripts/logo && /Developer/cctool/scripts/start-celeryworker"

  celerybeat:
    <<: *django
    image: cctool_prod_celerybeat
    container_name: cctool_prod_celerybeat
    depends_on:
      - redis
      - postgres
    command: /bin/bash -c "/Developer/cctool/scripts/logo && /Developer/cctool/scripts/start-celerybeat"

  flower:
    <<: *django
    image: cctool_prod_flower
    container_name: cctool_prod_flower
    ports:
      - "5555:5555"
    command: /bin/bash -c "/Developer/cctool/scripts/logo && /Developer/cctool/scripts/start-flower"

  # --- Frontend ---

  angularjs:
    build:
      context: "$CCTOOL"
      dockerfile: ./docker/compose/production/angularjs/Dockerfile
    image: cctool_prod_angularjs
    container_name: cctool_prod_angularjs
    volumes:
      - cctool_local_frontend:/Developer/cctool/frontend/dist
    env_file:
      - ./.envs/.local/.angularjs
    command: /bin/bash -c "/Developer/cctool/scripts/logo && /Developer/cctool/scripts/start"
